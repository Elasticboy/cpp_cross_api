// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: remote_command.proto

#ifndef PROTOBUF_remote_5fcommand_2eproto__INCLUDED
#define PROTOBUF_remote_5fcommand_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace network_io {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_remote_5fcommand_2eproto();
void protobuf_AssignDesc_remote_5fcommand_2eproto();
void protobuf_ShutdownFile_remote_5fcommand_2eproto();

class Request;
class FileInfo;
class Response;

enum Request_Type {
  Request_Type_SIMPLE = 0,
  Request_Type_EXPLORER = 1,
  Request_Type_KEYBOARD = 2,
  Request_Type_AI = 3,
  Request_Type_VOLUME = 4,
  Request_Type_APP = 5,
  Request_Type_Request_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Request_Type_Request_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Request_Type_IsValid(int value);
const Request_Type Request_Type_Type_MIN = Request_Type_SIMPLE;
const Request_Type Request_Type_Type_MAX = Request_Type_APP;
const int Request_Type_Type_ARRAYSIZE = Request_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Request_Type_descriptor();
inline const ::std::string& Request_Type_Name(Request_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Request_Type_descriptor(), value);
}
inline bool Request_Type_Parse(
    const ::std::string& name, Request_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Request_Type>(
    Request_Type_descriptor(), name, value);
}
enum Request_Code {
  Request_Code_NONE = 0,
  Request_Code_DEFINE = 1,
  Request_Code_STATUS = 2,
  Request_Code_ON = 3,
  Request_Code_OFF = 4,
  Request_Code_PING = 5,
  Request_Code_TEST = 6,
  Request_Code_KILL_SERVER = 7,
  Request_Code_SHUTDOWN = 8,
  Request_Code_SWITCH_WINDOW = 9,
  Request_Code_LOCK = 10,
  Request_Code_MUTE = 11,
  Request_Code_SAY = 12,
  Request_Code_DPAD_UP = 13,
  Request_Code_DPAD_DOWN = 14,
  Request_Code_DPAD_LEFT = 15,
  Request_Code_DPAD_RIGHT = 16,
  Request_Code_MEDIA_PLAY_PAUSE = 20,
  Request_Code_MEDIA_STOP = 21,
  Request_Code_MEDIA_PREVIOUS = 22,
  Request_Code_MEDIA_NEXT = 23,
  Request_Code_MEDIA_FF = 24,
  Request_Code_MEDIA_REWIND = 25,
  Request_Code_QUERY_ROOTS = 26,
  Request_Code_QUERY_CHILDREN = 27,
  Request_Code_OPEN_SERVER_SIDE = 28,
  Request_Code_OPEN_CLIENT_SIDE = 29,
  Request_Code_KEYCODE_CTRL = 30,
  Request_Code_KEYCODE_SHIFT = 31,
  Request_Code_KEYCODE_ALT_LEFT = 32,
  Request_Code_KEYCODE_ALT_RIGHT = 33,
  Request_Code_KEYCODE_WINDOWS = 34,
  Request_Code_KEYCODE_ENTER = 40,
  Request_Code_KEYCODE_ESCAPE = 41,
  Request_Code_KEYCODE_DELETE = 42,
  Request_Code_KEYCODE_SPACE = 43,
  Request_Code_KEYCODE_BACKSPACE = 44,
  Request_Code_KEYCODE_TAB = 45,
  Request_Code_KEYCODE_0 = 500,
  Request_Code_KEYCODE_1 = 501,
  Request_Code_KEYCODE_2 = 502,
  Request_Code_KEYCODE_3 = 503,
  Request_Code_KEYCODE_4 = 504,
  Request_Code_KEYCODE_5 = 505,
  Request_Code_KEYCODE_6 = 506,
  Request_Code_KEYCODE_7 = 507,
  Request_Code_KEYCODE_8 = 508,
  Request_Code_KEYCODE_9 = 509,
  Request_Code_KEYCODE_A = 510,
  Request_Code_KEYCODE_B = 511,
  Request_Code_KEYCODE_C = 512,
  Request_Code_KEYCODE_D = 513,
  Request_Code_KEYCODE_E = 514,
  Request_Code_KEYCODE_F = 515,
  Request_Code_KEYCODE_G = 516,
  Request_Code_KEYCODE_H = 517,
  Request_Code_KEYCODE_I = 518,
  Request_Code_KEYCODE_J = 519,
  Request_Code_KEYCODE_K = 520,
  Request_Code_KEYCODE_L = 521,
  Request_Code_KEYCODE_M = 522,
  Request_Code_KEYCODE_N = 523,
  Request_Code_KEYCODE_O = 524,
  Request_Code_KEYCODE_P = 525,
  Request_Code_KEYCODE_Q = 526,
  Request_Code_KEYCODE_R = 527,
  Request_Code_KEYCODE_S = 528,
  Request_Code_KEYCODE_T = 529,
  Request_Code_KEYCODE_U = 530,
  Request_Code_KEYCODE_V = 531,
  Request_Code_KEYCODE_W = 532,
  Request_Code_KEYCODE_X = 533,
  Request_Code_KEYCODE_Y = 534,
  Request_Code_KEYCODE_Z = 535,
  Request_Code_KEYCODE_F1 = 550,
  Request_Code_KEYCODE_F2 = 551,
  Request_Code_KEYCODE_F3 = 552,
  Request_Code_KEYCODE_F4 = 553,
  Request_Code_KEYCODE_F5 = 554,
  Request_Code_KEYCODE_F6 = 555,
  Request_Code_KEYCODE_F7 = 556,
  Request_Code_KEYCODE_F8 = 557,
  Request_Code_KEYCODE_F9 = 558,
  Request_Code_KEYCODE_F10 = 559,
  Request_Code_KEYCODE_F11 = 560,
  Request_Code_KEYCODE_F12 = 561,
  Request_Code_KEYCODE_EQUALS = 600,
  Request_Code_KEYCODE_MINUS = 601,
  Request_Code_KEYCODE_PLUS = 602,
  Request_Code_KEYCODE_STAR = 603,
  Request_Code_KEYCODE_SLASH = 604,
  Request_Code_KEYCODE_BACKSLASH = 605,
  Request_Code_KEYCODE_UNDERSCORE = 606,
  Request_Code_KEYCODE_PIPE = 607,
  Request_Code_KEYCODE_COMMA = 608,
  Request_Code_KEYCODE_PERIODE = 609,
  Request_Code_KEYCODE_COLON = 610,
  Request_Code_KEYCODE_SEMICOLON = 611,
  Request_Code_KEYCODE_AT = 612,
  Request_Code_KEYCODE_APOSTROPHE = 613,
  Request_Code_KEYCODE_LEFT_PAREN = 650,
  Request_Code_KEYCODE_RIGHT_PARENT = 651,
  Request_Code_KEYCODE_LEFT_BRACKET = 652,
  Request_Code_KEYCODE_RIGHT_BRACKET = 653,
  Request_Code_KEYCODE_LEFT_CURLY_BRACKET = 654,
  Request_Code_KEYCODE_RIGHT_CURLY_BRACKET = 655,
  Request_Code_KEYCODE_LEFT_ANGLE_BRACKET = 656,
  Request_Code_KEYCODE_RIGHT_ANGLE_BRACKET = 657,
  Request_Code_Request_Code_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Request_Code_Request_Code_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Request_Code_IsValid(int value);
const Request_Code Request_Code_Code_MIN = Request_Code_NONE;
const Request_Code Request_Code_Code_MAX = Request_Code_KEYCODE_RIGHT_ANGLE_BRACKET;
const int Request_Code_Code_ARRAYSIZE = Request_Code_Code_MAX + 1;

const ::google::protobuf::EnumDescriptor* Request_Code_descriptor();
inline const ::std::string& Request_Code_Name(Request_Code value) {
  return ::google::protobuf::internal::NameOfEnum(
    Request_Code_descriptor(), value);
}
inline bool Request_Code_Parse(
    const ::std::string& name, Request_Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Request_Code>(
    Request_Code_descriptor(), name, value);
}
enum Response_ReturnCode {
  Response_ReturnCode_RC_SUCCESS = 0,
  Response_ReturnCode_RC_ERROR = 1,
  Response_ReturnCode_Response_ReturnCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Response_ReturnCode_Response_ReturnCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Response_ReturnCode_IsValid(int value);
const Response_ReturnCode Response_ReturnCode_ReturnCode_MIN = Response_ReturnCode_RC_SUCCESS;
const Response_ReturnCode Response_ReturnCode_ReturnCode_MAX = Response_ReturnCode_RC_ERROR;
const int Response_ReturnCode_ReturnCode_ARRAYSIZE = Response_ReturnCode_ReturnCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* Response_ReturnCode_descriptor();
inline const ::std::string& Response_ReturnCode_Name(Response_ReturnCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    Response_ReturnCode_descriptor(), value);
}
inline bool Response_ReturnCode_Parse(
    const ::std::string& name, Response_ReturnCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Response_ReturnCode>(
    Response_ReturnCode_descriptor(), name, value);
}
// ===================================================================

class Request : public ::google::protobuf::Message {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Request_Type Type;
  static const Type SIMPLE = Request_Type_SIMPLE;
  static const Type EXPLORER = Request_Type_EXPLORER;
  static const Type KEYBOARD = Request_Type_KEYBOARD;
  static const Type AI = Request_Type_AI;
  static const Type VOLUME = Request_Type_VOLUME;
  static const Type APP = Request_Type_APP;
  static inline bool Type_IsValid(int value) {
    return Request_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Request_Type_Type_MIN;
  static const Type Type_MAX =
    Request_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Request_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Request_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Request_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Request_Type_Parse(name, value);
  }

  typedef Request_Code Code;
  static const Code NONE = Request_Code_NONE;
  static const Code DEFINE = Request_Code_DEFINE;
  static const Code STATUS = Request_Code_STATUS;
  static const Code ON = Request_Code_ON;
  static const Code OFF = Request_Code_OFF;
  static const Code PING = Request_Code_PING;
  static const Code TEST = Request_Code_TEST;
  static const Code KILL_SERVER = Request_Code_KILL_SERVER;
  static const Code SHUTDOWN = Request_Code_SHUTDOWN;
  static const Code SWITCH_WINDOW = Request_Code_SWITCH_WINDOW;
  static const Code LOCK = Request_Code_LOCK;
  static const Code MUTE = Request_Code_MUTE;
  static const Code SAY = Request_Code_SAY;
  static const Code DPAD_UP = Request_Code_DPAD_UP;
  static const Code DPAD_DOWN = Request_Code_DPAD_DOWN;
  static const Code DPAD_LEFT = Request_Code_DPAD_LEFT;
  static const Code DPAD_RIGHT = Request_Code_DPAD_RIGHT;
  static const Code MEDIA_PLAY_PAUSE = Request_Code_MEDIA_PLAY_PAUSE;
  static const Code MEDIA_STOP = Request_Code_MEDIA_STOP;
  static const Code MEDIA_PREVIOUS = Request_Code_MEDIA_PREVIOUS;
  static const Code MEDIA_NEXT = Request_Code_MEDIA_NEXT;
  static const Code MEDIA_FF = Request_Code_MEDIA_FF;
  static const Code MEDIA_REWIND = Request_Code_MEDIA_REWIND;
  static const Code QUERY_ROOTS = Request_Code_QUERY_ROOTS;
  static const Code QUERY_CHILDREN = Request_Code_QUERY_CHILDREN;
  static const Code OPEN_SERVER_SIDE = Request_Code_OPEN_SERVER_SIDE;
  static const Code OPEN_CLIENT_SIDE = Request_Code_OPEN_CLIENT_SIDE;
  static const Code KEYCODE_CTRL = Request_Code_KEYCODE_CTRL;
  static const Code KEYCODE_SHIFT = Request_Code_KEYCODE_SHIFT;
  static const Code KEYCODE_ALT_LEFT = Request_Code_KEYCODE_ALT_LEFT;
  static const Code KEYCODE_ALT_RIGHT = Request_Code_KEYCODE_ALT_RIGHT;
  static const Code KEYCODE_WINDOWS = Request_Code_KEYCODE_WINDOWS;
  static const Code KEYCODE_ENTER = Request_Code_KEYCODE_ENTER;
  static const Code KEYCODE_ESCAPE = Request_Code_KEYCODE_ESCAPE;
  static const Code KEYCODE_DELETE = Request_Code_KEYCODE_DELETE;
  static const Code KEYCODE_SPACE = Request_Code_KEYCODE_SPACE;
  static const Code KEYCODE_BACKSPACE = Request_Code_KEYCODE_BACKSPACE;
  static const Code KEYCODE_TAB = Request_Code_KEYCODE_TAB;
  static const Code KEYCODE_0 = Request_Code_KEYCODE_0;
  static const Code KEYCODE_1 = Request_Code_KEYCODE_1;
  static const Code KEYCODE_2 = Request_Code_KEYCODE_2;
  static const Code KEYCODE_3 = Request_Code_KEYCODE_3;
  static const Code KEYCODE_4 = Request_Code_KEYCODE_4;
  static const Code KEYCODE_5 = Request_Code_KEYCODE_5;
  static const Code KEYCODE_6 = Request_Code_KEYCODE_6;
  static const Code KEYCODE_7 = Request_Code_KEYCODE_7;
  static const Code KEYCODE_8 = Request_Code_KEYCODE_8;
  static const Code KEYCODE_9 = Request_Code_KEYCODE_9;
  static const Code KEYCODE_A = Request_Code_KEYCODE_A;
  static const Code KEYCODE_B = Request_Code_KEYCODE_B;
  static const Code KEYCODE_C = Request_Code_KEYCODE_C;
  static const Code KEYCODE_D = Request_Code_KEYCODE_D;
  static const Code KEYCODE_E = Request_Code_KEYCODE_E;
  static const Code KEYCODE_F = Request_Code_KEYCODE_F;
  static const Code KEYCODE_G = Request_Code_KEYCODE_G;
  static const Code KEYCODE_H = Request_Code_KEYCODE_H;
  static const Code KEYCODE_I = Request_Code_KEYCODE_I;
  static const Code KEYCODE_J = Request_Code_KEYCODE_J;
  static const Code KEYCODE_K = Request_Code_KEYCODE_K;
  static const Code KEYCODE_L = Request_Code_KEYCODE_L;
  static const Code KEYCODE_M = Request_Code_KEYCODE_M;
  static const Code KEYCODE_N = Request_Code_KEYCODE_N;
  static const Code KEYCODE_O = Request_Code_KEYCODE_O;
  static const Code KEYCODE_P = Request_Code_KEYCODE_P;
  static const Code KEYCODE_Q = Request_Code_KEYCODE_Q;
  static const Code KEYCODE_R = Request_Code_KEYCODE_R;
  static const Code KEYCODE_S = Request_Code_KEYCODE_S;
  static const Code KEYCODE_T = Request_Code_KEYCODE_T;
  static const Code KEYCODE_U = Request_Code_KEYCODE_U;
  static const Code KEYCODE_V = Request_Code_KEYCODE_V;
  static const Code KEYCODE_W = Request_Code_KEYCODE_W;
  static const Code KEYCODE_X = Request_Code_KEYCODE_X;
  static const Code KEYCODE_Y = Request_Code_KEYCODE_Y;
  static const Code KEYCODE_Z = Request_Code_KEYCODE_Z;
  static const Code KEYCODE_F1 = Request_Code_KEYCODE_F1;
  static const Code KEYCODE_F2 = Request_Code_KEYCODE_F2;
  static const Code KEYCODE_F3 = Request_Code_KEYCODE_F3;
  static const Code KEYCODE_F4 = Request_Code_KEYCODE_F4;
  static const Code KEYCODE_F5 = Request_Code_KEYCODE_F5;
  static const Code KEYCODE_F6 = Request_Code_KEYCODE_F6;
  static const Code KEYCODE_F7 = Request_Code_KEYCODE_F7;
  static const Code KEYCODE_F8 = Request_Code_KEYCODE_F8;
  static const Code KEYCODE_F9 = Request_Code_KEYCODE_F9;
  static const Code KEYCODE_F10 = Request_Code_KEYCODE_F10;
  static const Code KEYCODE_F11 = Request_Code_KEYCODE_F11;
  static const Code KEYCODE_F12 = Request_Code_KEYCODE_F12;
  static const Code KEYCODE_EQUALS = Request_Code_KEYCODE_EQUALS;
  static const Code KEYCODE_MINUS = Request_Code_KEYCODE_MINUS;
  static const Code KEYCODE_PLUS = Request_Code_KEYCODE_PLUS;
  static const Code KEYCODE_STAR = Request_Code_KEYCODE_STAR;
  static const Code KEYCODE_SLASH = Request_Code_KEYCODE_SLASH;
  static const Code KEYCODE_BACKSLASH = Request_Code_KEYCODE_BACKSLASH;
  static const Code KEYCODE_UNDERSCORE = Request_Code_KEYCODE_UNDERSCORE;
  static const Code KEYCODE_PIPE = Request_Code_KEYCODE_PIPE;
  static const Code KEYCODE_COMMA = Request_Code_KEYCODE_COMMA;
  static const Code KEYCODE_PERIODE = Request_Code_KEYCODE_PERIODE;
  static const Code KEYCODE_COLON = Request_Code_KEYCODE_COLON;
  static const Code KEYCODE_SEMICOLON = Request_Code_KEYCODE_SEMICOLON;
  static const Code KEYCODE_AT = Request_Code_KEYCODE_AT;
  static const Code KEYCODE_APOSTROPHE = Request_Code_KEYCODE_APOSTROPHE;
  static const Code KEYCODE_LEFT_PAREN = Request_Code_KEYCODE_LEFT_PAREN;
  static const Code KEYCODE_RIGHT_PARENT = Request_Code_KEYCODE_RIGHT_PARENT;
  static const Code KEYCODE_LEFT_BRACKET = Request_Code_KEYCODE_LEFT_BRACKET;
  static const Code KEYCODE_RIGHT_BRACKET = Request_Code_KEYCODE_RIGHT_BRACKET;
  static const Code KEYCODE_LEFT_CURLY_BRACKET = Request_Code_KEYCODE_LEFT_CURLY_BRACKET;
  static const Code KEYCODE_RIGHT_CURLY_BRACKET = Request_Code_KEYCODE_RIGHT_CURLY_BRACKET;
  static const Code KEYCODE_LEFT_ANGLE_BRACKET = Request_Code_KEYCODE_LEFT_ANGLE_BRACKET;
  static const Code KEYCODE_RIGHT_ANGLE_BRACKET = Request_Code_KEYCODE_RIGHT_ANGLE_BRACKET;
  static inline bool Code_IsValid(int value) {
    return Request_Code_IsValid(value);
  }
  static const Code Code_MIN =
    Request_Code_Code_MIN;
  static const Code Code_MAX =
    Request_Code_Code_MAX;
  static const int Code_ARRAYSIZE =
    Request_Code_Code_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Code_descriptor() {
    return Request_Code_descriptor();
  }
  static inline const ::std::string& Code_Name(Code value) {
    return Request_Code_Name(value);
  }
  static inline bool Code_Parse(const ::std::string& name,
      Code* value) {
    return Request_Code_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .network_io.Request.Type type = 1;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::network_io::Request_Type type() const;
  inline void set_type(::network_io::Request_Type value);

  // optional .network_io.Request.Code code = 2;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::network_io::Request_Code code() const;
  inline void set_code(::network_io::Request_Code value);

  // optional string securityToken = 3;
  inline void clear_securitytoken();
  static const int kSecurityTokenFieldNumber = 3;
  inline const ::std::string& securitytoken() const;
  inline void set_securitytoken(const ::std::string& value);
  inline void set_securitytoken(const char* value);
  inline void set_securitytoken(const char* value, size_t size);
  inline ::std::string* mutable_securitytoken();
  inline ::std::string* release_securitytoken();
  inline void set_allocated_securitytoken(::std::string* securitytoken);

  // optional int32 intExtra = 4;
  inline void clear_intextra();
  static const int kIntExtraFieldNumber = 4;
  inline ::google::protobuf::int32 intextra() const;
  inline void set_intextra(::google::protobuf::int32 value);

  // optional string stringExtra = 5;
  inline void clear_stringextra();
  static const int kStringExtraFieldNumber = 5;
  inline const ::std::string& stringextra() const;
  inline void set_stringextra(const ::std::string& value);
  inline void set_stringextra(const char* value);
  inline void set_stringextra(const char* value, size_t size);
  inline ::std::string* mutable_stringextra();
  inline ::std::string* release_stringextra();
  inline void set_allocated_stringextra(::std::string* stringextra);

  // @@protoc_insertion_point(class_scope:network_io.Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int type_;
  int code_;
  ::google::protobuf::internal::ArenaStringPtr securitytoken_;
  ::google::protobuf::internal::ArenaStringPtr stringextra_;
  ::google::protobuf::int32 intextra_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_remote_5fcommand_2eproto();
  friend void protobuf_AssignDesc_remote_5fcommand_2eproto();
  friend void protobuf_ShutdownFile_remote_5fcommand_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// -------------------------------------------------------------------

class FileInfo : public ::google::protobuf::Message {
 public:
  FileInfo();
  virtual ~FileInfo();

  FileInfo(const FileInfo& from);

  inline FileInfo& operator=(const FileInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileInfo& default_instance();

  void Swap(FileInfo* other);

  // implements Message ----------------------------------------------

  inline FileInfo* New() const { return New(NULL); }

  FileInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileInfo& from);
  void MergeFrom(const FileInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FileInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string absoluteFilePath = 1;
  inline void clear_absolutefilepath();
  static const int kAbsoluteFilePathFieldNumber = 1;
  inline const ::std::string& absolutefilepath() const;
  inline void set_absolutefilepath(const ::std::string& value);
  inline void set_absolutefilepath(const char* value);
  inline void set_absolutefilepath(const char* value, size_t size);
  inline ::std::string* mutable_absolutefilepath();
  inline ::std::string* release_absolutefilepath();
  inline void set_allocated_absolutefilepath(::std::string* absolutefilepath);

  // optional string filename = 2;
  inline void clear_filename();
  static const int kFilenameFieldNumber = 2;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // optional bool isDirectory = 3;
  inline void clear_isdirectory();
  static const int kIsDirectoryFieldNumber = 3;
  inline bool isdirectory() const;
  inline void set_isdirectory(bool value);

  // optional uint32 size = 4;
  inline void clear_size();
  static const int kSizeFieldNumber = 4;
  inline ::google::protobuf::uint32 size() const;
  inline void set_size(::google::protobuf::uint32 value);

  // repeated .network_io.FileInfo child = 5;
  inline int child_size() const;
  inline void clear_child();
  static const int kChildFieldNumber = 5;
  inline const ::network_io::FileInfo& child(int index) const;
  inline ::network_io::FileInfo* mutable_child(int index);
  inline ::network_io::FileInfo* add_child();
  inline const ::google::protobuf::RepeatedPtrField< ::network_io::FileInfo >&
      child() const;
  inline ::google::protobuf::RepeatedPtrField< ::network_io::FileInfo >*
      mutable_child();

  // @@protoc_insertion_point(class_scope:network_io.FileInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr absolutefilepath_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  bool isdirectory_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::RepeatedPtrField< ::network_io::FileInfo > child_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_remote_5fcommand_2eproto();
  friend void protobuf_AssignDesc_remote_5fcommand_2eproto();
  friend void protobuf_ShutdownFile_remote_5fcommand_2eproto();

  void InitAsDefaultInstance();
  static FileInfo* default_instance_;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Response_ReturnCode ReturnCode;
  static const ReturnCode RC_SUCCESS = Response_ReturnCode_RC_SUCCESS;
  static const ReturnCode RC_ERROR = Response_ReturnCode_RC_ERROR;
  static inline bool ReturnCode_IsValid(int value) {
    return Response_ReturnCode_IsValid(value);
  }
  static const ReturnCode ReturnCode_MIN =
    Response_ReturnCode_ReturnCode_MIN;
  static const ReturnCode ReturnCode_MAX =
    Response_ReturnCode_ReturnCode_MAX;
  static const int ReturnCode_ARRAYSIZE =
    Response_ReturnCode_ReturnCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ReturnCode_descriptor() {
    return Response_ReturnCode_descriptor();
  }
  static inline const ::std::string& ReturnCode_Name(ReturnCode value) {
    return Response_ReturnCode_Name(value);
  }
  static inline bool ReturnCode_Parse(const ::std::string& name,
      ReturnCode* value) {
    return Response_ReturnCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .network_io.Request.Type requestType = 1;
  inline void clear_requesttype();
  static const int kRequestTypeFieldNumber = 1;
  inline ::network_io::Request_Type requesttype() const;
  inline void set_requesttype(::network_io::Request_Type value);

  // optional .network_io.Request.Code requestCode = 2;
  inline void clear_requestcode();
  static const int kRequestCodeFieldNumber = 2;
  inline ::network_io::Request_Code requestcode() const;
  inline void set_requestcode(::network_io::Request_Code value);

  // optional .network_io.Response.ReturnCode returnCode = 3;
  inline void clear_returncode();
  static const int kReturnCodeFieldNumber = 3;
  inline ::network_io::Response_ReturnCode returncode() const;
  inline void set_returncode(::network_io::Response_ReturnCode value);

  // optional string message = 4;
  inline void clear_message();
  static const int kMessageFieldNumber = 4;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional int32 intValue = 5;
  inline void clear_intvalue();
  static const int kIntValueFieldNumber = 5;
  inline ::google::protobuf::int32 intvalue() const;
  inline void set_intvalue(::google::protobuf::int32 value);

  // optional .network_io.FileInfo file = 6;
  inline bool has_file() const;
  inline void clear_file();
  static const int kFileFieldNumber = 6;
  inline const ::network_io::FileInfo& file() const;
  inline ::network_io::FileInfo* mutable_file();
  inline ::network_io::FileInfo* release_file();
  inline void set_allocated_file(::network_io::FileInfo* file);

  // @@protoc_insertion_point(class_scope:network_io.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int requesttype_;
  int requestcode_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  int returncode_;
  ::google::protobuf::int32 intvalue_;
  ::network_io::FileInfo* file_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_remote_5fcommand_2eproto();
  friend void protobuf_AssignDesc_remote_5fcommand_2eproto();
  friend void protobuf_ShutdownFile_remote_5fcommand_2eproto();

  void InitAsDefaultInstance();
  static Response* default_instance_;
};
// ===================================================================


// ===================================================================

// Request

// optional .network_io.Request.Type type = 1;
inline void Request::clear_type() {
  type_ = 0;
}
inline ::network_io::Request_Type Request::type() const {
  // @@protoc_insertion_point(field_get:network_io.Request.type)
  return static_cast< ::network_io::Request_Type >(type_);
}
inline void Request::set_type(::network_io::Request_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:network_io.Request.type)
}

// optional .network_io.Request.Code code = 2;
inline void Request::clear_code() {
  code_ = 0;
}
inline ::network_io::Request_Code Request::code() const {
  // @@protoc_insertion_point(field_get:network_io.Request.code)
  return static_cast< ::network_io::Request_Code >(code_);
}
inline void Request::set_code(::network_io::Request_Code value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:network_io.Request.code)
}

// optional string securityToken = 3;
inline void Request::clear_securitytoken() {
  securitytoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::securitytoken() const {
  // @@protoc_insertion_point(field_get:network_io.Request.securityToken)
  return securitytoken_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_securitytoken(const ::std::string& value) {
  
  securitytoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:network_io.Request.securityToken)
}
inline void Request::set_securitytoken(const char* value) {
  
  securitytoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:network_io.Request.securityToken)
}
inline void Request::set_securitytoken(const char* value, size_t size) {
  
  securitytoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:network_io.Request.securityToken)
}
inline ::std::string* Request::mutable_securitytoken() {
  
  // @@protoc_insertion_point(field_mutable:network_io.Request.securityToken)
  return securitytoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_securitytoken() {
  
  return securitytoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_securitytoken(::std::string* securitytoken) {
  if (securitytoken != NULL) {
    
  } else {
    
  }
  securitytoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), securitytoken);
  // @@protoc_insertion_point(field_set_allocated:network_io.Request.securityToken)
}

// optional int32 intExtra = 4;
inline void Request::clear_intextra() {
  intextra_ = 0;
}
inline ::google::protobuf::int32 Request::intextra() const {
  // @@protoc_insertion_point(field_get:network_io.Request.intExtra)
  return intextra_;
}
inline void Request::set_intextra(::google::protobuf::int32 value) {
  
  intextra_ = value;
  // @@protoc_insertion_point(field_set:network_io.Request.intExtra)
}

// optional string stringExtra = 5;
inline void Request::clear_stringextra() {
  stringextra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::stringextra() const {
  // @@protoc_insertion_point(field_get:network_io.Request.stringExtra)
  return stringextra_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_stringextra(const ::std::string& value) {
  
  stringextra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:network_io.Request.stringExtra)
}
inline void Request::set_stringextra(const char* value) {
  
  stringextra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:network_io.Request.stringExtra)
}
inline void Request::set_stringextra(const char* value, size_t size) {
  
  stringextra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:network_io.Request.stringExtra)
}
inline ::std::string* Request::mutable_stringextra() {
  
  // @@protoc_insertion_point(field_mutable:network_io.Request.stringExtra)
  return stringextra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_stringextra() {
  
  return stringextra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_stringextra(::std::string* stringextra) {
  if (stringextra != NULL) {
    
  } else {
    
  }
  stringextra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stringextra);
  // @@protoc_insertion_point(field_set_allocated:network_io.Request.stringExtra)
}

// -------------------------------------------------------------------

// FileInfo

// optional string absoluteFilePath = 1;
inline void FileInfo::clear_absolutefilepath() {
  absolutefilepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfo::absolutefilepath() const {
  // @@protoc_insertion_point(field_get:network_io.FileInfo.absoluteFilePath)
  return absolutefilepath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_absolutefilepath(const ::std::string& value) {
  
  absolutefilepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:network_io.FileInfo.absoluteFilePath)
}
inline void FileInfo::set_absolutefilepath(const char* value) {
  
  absolutefilepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:network_io.FileInfo.absoluteFilePath)
}
inline void FileInfo::set_absolutefilepath(const char* value, size_t size) {
  
  absolutefilepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:network_io.FileInfo.absoluteFilePath)
}
inline ::std::string* FileInfo::mutable_absolutefilepath() {
  
  // @@protoc_insertion_point(field_mutable:network_io.FileInfo.absoluteFilePath)
  return absolutefilepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfo::release_absolutefilepath() {
  
  return absolutefilepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_allocated_absolutefilepath(::std::string* absolutefilepath) {
  if (absolutefilepath != NULL) {
    
  } else {
    
  }
  absolutefilepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), absolutefilepath);
  // @@protoc_insertion_point(field_set_allocated:network_io.FileInfo.absoluteFilePath)
}

// optional string filename = 2;
inline void FileInfo::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfo::filename() const {
  // @@protoc_insertion_point(field_get:network_io.FileInfo.filename)
  return filename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:network_io.FileInfo.filename)
}
inline void FileInfo::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:network_io.FileInfo.filename)
}
inline void FileInfo::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:network_io.FileInfo.filename)
}
inline ::std::string* FileInfo::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:network_io.FileInfo.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfo::release_filename() {
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:network_io.FileInfo.filename)
}

// optional bool isDirectory = 3;
inline void FileInfo::clear_isdirectory() {
  isdirectory_ = false;
}
inline bool FileInfo::isdirectory() const {
  // @@protoc_insertion_point(field_get:network_io.FileInfo.isDirectory)
  return isdirectory_;
}
inline void FileInfo::set_isdirectory(bool value) {
  
  isdirectory_ = value;
  // @@protoc_insertion_point(field_set:network_io.FileInfo.isDirectory)
}

// optional uint32 size = 4;
inline void FileInfo::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 FileInfo::size() const {
  // @@protoc_insertion_point(field_get:network_io.FileInfo.size)
  return size_;
}
inline void FileInfo::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:network_io.FileInfo.size)
}

// repeated .network_io.FileInfo child = 5;
inline int FileInfo::child_size() const {
  return child_.size();
}
inline void FileInfo::clear_child() {
  child_.Clear();
}
inline const ::network_io::FileInfo& FileInfo::child(int index) const {
  // @@protoc_insertion_point(field_get:network_io.FileInfo.child)
  return child_.Get(index);
}
inline ::network_io::FileInfo* FileInfo::mutable_child(int index) {
  // @@protoc_insertion_point(field_mutable:network_io.FileInfo.child)
  return child_.Mutable(index);
}
inline ::network_io::FileInfo* FileInfo::add_child() {
  // @@protoc_insertion_point(field_add:network_io.FileInfo.child)
  return child_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::network_io::FileInfo >&
FileInfo::child() const {
  // @@protoc_insertion_point(field_list:network_io.FileInfo.child)
  return child_;
}
inline ::google::protobuf::RepeatedPtrField< ::network_io::FileInfo >*
FileInfo::mutable_child() {
  // @@protoc_insertion_point(field_mutable_list:network_io.FileInfo.child)
  return &child_;
}

// -------------------------------------------------------------------

// Response

// optional .network_io.Request.Type requestType = 1;
inline void Response::clear_requesttype() {
  requesttype_ = 0;
}
inline ::network_io::Request_Type Response::requesttype() const {
  // @@protoc_insertion_point(field_get:network_io.Response.requestType)
  return static_cast< ::network_io::Request_Type >(requesttype_);
}
inline void Response::set_requesttype(::network_io::Request_Type value) {
  
  requesttype_ = value;
  // @@protoc_insertion_point(field_set:network_io.Response.requestType)
}

// optional .network_io.Request.Code requestCode = 2;
inline void Response::clear_requestcode() {
  requestcode_ = 0;
}
inline ::network_io::Request_Code Response::requestcode() const {
  // @@protoc_insertion_point(field_get:network_io.Response.requestCode)
  return static_cast< ::network_io::Request_Code >(requestcode_);
}
inline void Response::set_requestcode(::network_io::Request_Code value) {
  
  requestcode_ = value;
  // @@protoc_insertion_point(field_set:network_io.Response.requestCode)
}

// optional .network_io.Response.ReturnCode returnCode = 3;
inline void Response::clear_returncode() {
  returncode_ = 0;
}
inline ::network_io::Response_ReturnCode Response::returncode() const {
  // @@protoc_insertion_point(field_get:network_io.Response.returnCode)
  return static_cast< ::network_io::Response_ReturnCode >(returncode_);
}
inline void Response::set_returncode(::network_io::Response_ReturnCode value) {
  
  returncode_ = value;
  // @@protoc_insertion_point(field_set:network_io.Response.returnCode)
}

// optional string message = 4;
inline void Response::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Response::message() const {
  // @@protoc_insertion_point(field_get:network_io.Response.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:network_io.Response.message)
}
inline void Response::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:network_io.Response.message)
}
inline void Response::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:network_io.Response.message)
}
inline ::std::string* Response::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:network_io.Response.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_message() {
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:network_io.Response.message)
}

// optional int32 intValue = 5;
inline void Response::clear_intvalue() {
  intvalue_ = 0;
}
inline ::google::protobuf::int32 Response::intvalue() const {
  // @@protoc_insertion_point(field_get:network_io.Response.intValue)
  return intvalue_;
}
inline void Response::set_intvalue(::google::protobuf::int32 value) {
  
  intvalue_ = value;
  // @@protoc_insertion_point(field_set:network_io.Response.intValue)
}

// optional .network_io.FileInfo file = 6;
inline bool Response::has_file() const {
  return !_is_default_instance_ && file_ != NULL;
}
inline void Response::clear_file() {
  if (file_ != NULL) delete file_;
  file_ = NULL;
}
inline const ::network_io::FileInfo& Response::file() const {
  // @@protoc_insertion_point(field_get:network_io.Response.file)
  return file_ != NULL ? *file_ : *default_instance_->file_;
}
inline ::network_io::FileInfo* Response::mutable_file() {
  
  if (file_ == NULL) {
    file_ = new ::network_io::FileInfo;
  }
  // @@protoc_insertion_point(field_mutable:network_io.Response.file)
  return file_;
}
inline ::network_io::FileInfo* Response::release_file() {
  
  ::network_io::FileInfo* temp = file_;
  file_ = NULL;
  return temp;
}
inline void Response::set_allocated_file(::network_io::FileInfo* file) {
  delete file_;
  file_ = file;
  if (file) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:network_io.Response.file)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace network_io

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::network_io::Request_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network_io::Request_Type>() {
  return ::network_io::Request_Type_descriptor();
}
template <> struct is_proto_enum< ::network_io::Request_Code> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network_io::Request_Code>() {
  return ::network_io::Request_Code_descriptor();
}
template <> struct is_proto_enum< ::network_io::Response_ReturnCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network_io::Response_ReturnCode>() {
  return ::network_io::Response_ReturnCode_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_remote_5fcommand_2eproto__INCLUDED
